<?xml version="1.0" encoding="utf-8" ?>
<Patch>
	<Operation Class="XmlExtensions.ForEach">
		<xpath>/Defs/ThingDef[@ParentName="MakeStoneBlocksBase"]</xpath>
		<storeIn>def</storeIn>
		<apply>
			<Operation Class="XmlExtensions.CreateVariable">
				<storeIn>inputCount</storeIn>
				<!-- This is potentially brittle, but the alternative would be to check if the
					 filtered thingdef is a stone chunk, which would be extremely performance-intensive. -->
				<value>{def}/ingredients/li[1]/count</value>
				<fromXml>true</fromXml>
				<defaultValue>1</defaultValue>
				<value2>3</value2>
				<fromXml2>false</fromXml>
				<operation>*</operation>
			</Operation>
			<Operation Class="XmlExtensions.CreateVariable">
				<storeIn>outputCount</storeIn>
				<!-- see above -->
				<value>{def}/products/*[1]/text()</value>
				<fromXml>true</fromXml>
				<defaultValue>20</defaultValue>
				<value2>3</value2>
				<fromXml2>false</fromXml2>
				<operation>*</operation>
			<Operation Class="XmlExtensions.PatchOperationSafeCopy">
				
	</Operation>
	<Operation Class="XmlExtensions.CreateDocument">
		<docName>D9SBP_temp_Stonecutting</docName>
		<xpath>/Defs/ThingDef[@ParentName="MakeStoneBlocksBase"]</xpath>
	<Operation>
	<Operation Class="XmlExtensions.ForEach">
		<xpath>/D9SBP_temp_Stonecutting/ThingDef[defName!=Make_StoneBlocksAny]</xpath>
		<storeIn>def</storeIn>
		<apply>
			<!-- prepend "D9SBP_" and append "Bulk" to defName -->
			<Operation Class="XmlExtensions.PatchOperationMath">
				<xpath>{def}/defName</xpath>
				<value>D9SBP_</value>
				<operation>concat2</operation>
			</Operation>
			<Operation Class="XmlExtensions.PatchOperationMath">
				<xpath>{def}/defName</xpath>
				<value>Bulk</value>
				<operation>concat</operation>
			</Operation>
			<!-- change the label to reflect being in bulk -->
			<Operation Class="XmlExtensions.PatchOperationMath">
				<xpath>{def}/label</xpath>
				<value> x3</value>
				<operation>concat</operation>
			</Operation>
			<!-- The following two patches are brittle, and will likely cause issues if people make weird
				 stone block recipes (e.g. adding new ingredients or outputs. The alternative would be *very*
				 expensive checking so i will simply ignore that. -->
			<!-- multiply input count by 3 -->
			<Operation Class="XmlExtensions.PatchOperationMath">
				<xpath>{def}/ingredients/li[1]/filter/count</xpath>
				<value>3</xpath>
				<operation>*</operation>
			</Operation>
			<!-- multiply output count by 3 -->
			<Operation Class="XmlExtensions.IfStatement">
				<!-- Make_StoneBlocksAny uses the (extremely opaque :|) specialProducts tag instead of
						<products/>, so skip that one -->
				<condition Class="XmlExtensions.Boolean.Comparison">
					<value1>{def}/defName</value1>
					<fromXml1>true</fromXml1>
					<value2>Make_StoneBlocksAny</value2>
					<relation>eq</relation>
				</condition>
				<caseFalse>
					<Operation Class="XmlExtensions.PatchOperationMath">
						<xpath>{def}/products/*[1]</xpath>
						<value>3</xpath>
						<operation>*</operation>
					</Operation>
				</caseFalse>
			</Operation>			
		</apply>
	</Operation>
	<Operation Class="XmlExtensions.MergeDocument">
		<docName>D9SBP_temp_Stonecutting</docName>
	</Operation>
</Patch>