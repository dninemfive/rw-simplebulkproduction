<?xml version="1.0" encoding="utf-8" ?>
<Patch>
	<Operation Class="XmlExtensions.CreateDocument">
		<docName>D9SBP_temp_Stonecutting</docName>
		<xpath>Defs/RecipeDef[@ParentName="MakeStoneBlocksBase"]</xpath>
	</Operation>		
	<!-- the idea was to copy the original defnames in and insert them later -->
	<!-- maybe just copy the values in the doc and edit those instead? -->
	<Operation Class="XmlExtensions.PatchOperationAdd">
		<xmlDoc>D9SBP_temp_Stonecutting</xmlDoc>
		<xpath>D9SBP_temp_Stonecutting</xpath>
		<value>originalDefNames</value>
	</Operation>
	<Operation Class="XmlExtensions.ForEach">
		<xpath>D9SBP_temp_Stonecutting/RecipeDef</xpath>
		<xmlDoc>D9SBP_temp_Stonecutting</xmlDoc>
		<storeIn>def</storeIn>
		<apply>
			<Operation Class="XmlExtensions.Log">
				<text>Adding bulk recipe for:</text>
				<xmlDoc>D9SBP_temp_Stonecutting</xmlDoc>
				<xpath>{def}/defName</xpath>
			</Operation>
			<Operation Class="XmlExtensions.PatchOperationAdd">
				<xmlDoc>D9SBP_temp_Stonecutting</xmlDoc>
				<xpath>D9SBP_temp_Stonecutting/originalDefNames</xpath>
				<value><li>{def}/defName</li></value>
			</Operation>
			<!-- prepend "D9SBP_" and append "Bulk" to defName -->
			<Operation Class="XmlExtensions.PatchOperationMath">
				<xpath>{def}/defName</xpath>
				<xmlDoc>D9SBP_temp_Stonecutting</xmlDoc>
				<value>D9SBP_</value>
				<operation>concat2</operation>
			</Operation>
			<Operation Class="XmlExtensions.PatchOperationMath">
				<xpath>{def}/defName</xpath>
				<xmlDoc>D9SBP_temp_Stonecutting</xmlDoc>
				<value>Bulk</value>
				<operation>concat</operation>
			</Operation>
			<Operation Class="XmlExtensions.Log">
				<text>defName is now:</text>
				<xmlDoc>D9SBP_temp_Stonecutting</xmlDoc>
				<xpath>{def}/defName</xpath>
			</Operation>
			<Operation Class="XmlExtensions.Log">
				<text>original was {ogDefName}:</text>
				<xmlDoc>D9SBP_temp_Stonecutting</xmlDoc>
				<xpath>{ogDefName}</xpath>
			</Operation>
			<!-- change the label to reflect being in bulk -->
			<Operation Class="XmlExtensions.PatchOperationMath">
				<xpath>{def}/label</xpath>
				<xmlDoc>D9SBP_temp_Stonecutting</xmlDoc>
				<value> x3</value>
				<operation>concat</operation>
			</Operation>
			<!-- The following two patches are brittle, and will likely cause issues if people make weird
				 stone block recipes (e.g. adding new ingredients or outputs. The alternative would be *very*
				 expensive checking so i will simply ignore that. -->
			<!-- multiply input count by 3 -->
			<Operation Class="XmlExtensions.PatchOperationMath">
				<xpath>{def}/ingredients/li[1]/count</xpath>
				<xmlDoc>D9SBP_temp_Stonecutting</xmlDoc>
				<value>3</value>
				<operation>*</operation>
			</Operation>
			<!-- multiply output count by 3 -->
			<Operation Class="XmlExtensions.IfStatement">
				<!-- Make_StoneBlocksAny uses the (extremely opaque :|) specialProducts tag instead of
						<products/>, so skip that one -->
				<condition Class="XmlExtensions.Boolean.Comparison">
					<value1>{def}/defName</value1>
					<xmlDoc>D9SBP_temp_Stonecutting</xmlDoc>
					<fromXml1>true</fromXml1>
					<value2>Make_StoneBlocksAny</value2>
					<fromXml2>false</fromXml2>
					<nonNumeric>true</nonNumeric>
					<relation>eq</relation>
				</condition>
				<caseFalse>
					<Operation Class="XmlExtensions.PatchOperationMath">
						<xpath>{def}/products/*[1]</xpath>
						<xmlDoc>D9SBP_temp_Stonecutting</xmlDoc>
						<value>3</value>
						<operation>*</operation>
					</Operation>
				</caseFalse>
			</Operation>			
		</apply>
	</Operation>
	<Operation Class="XmlExtensions.MergeDocument">
		<docName>D9SBP_temp_Stonecutting</docName>
	</Operation>
	<Operation Class="XmlExtensions.Log">
		<text>After patching, these defs exist:</text>
		<xpath>Defs/RecipeDef[@ParentName="MakeStoneBlocksBase"]/defName</xpath>
	</Operation>
</Patch>